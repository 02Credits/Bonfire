// Generated by CoffeeScript 1.12.0
(function() {
  define(["mithril", "moment", "jquery"], function(m, moment, $) {
    return {
      position: "inner",
      name: "dubs",
      parent: "time",
      render: function(doc, renderBefore, renderAfter) {
        return (renderBefore(doc)).then(function(beforeChildren) {
          return (renderAfter(doc)).then(function(afterChildren) {
            var char, dubsChar, dubsColors, dubsElement, dubsList, dubsString, flashFunction, i, j, length, newDubsString, ref;
            if (doc.time != null) {
              dubsString = moment(doc.time).valueOf().toString();
              length = dubsString.length;
              dubsString = dubsString.substring(length - 9, length);
              dubsColors = {
                1: "#9d9d9d",
                2: "#1eff00",
                3: "#0070dd",
                4: "#a335ee",
                5: "#ff8000",
                6: "#e6cc80",
                7: "#e6cc80"
              };
              newDubsString = "";
              dubsChar = dubsString.charAt(dubsString.length - 1);
              dubsList = dubsChar;
              for (i = j = ref = dubsString.length - 2; ref <= 0 ? j <= 0 : j >= 0; i = ref <= 0 ? ++j : --j) {
                char = dubsString.charAt(i);
                if (char !== dubsChar) {
                  newDubsString = char + newDubsString;
                  dubsChar = "";
                } else {
                  dubsList = char + dubsList;
                }
              }
              flashFunction = function(element, isInitialized) {
                return {};
              };
              if (dubsList.length !== 1) {
                flashFunction = function(element, isInitialized) {
                  var dubsColor, previousColor;
                  if (!isInitialized) {
                    dubsColor = dubsColors[dubsList.length];
                    previousColor = "#424242";
                    $('body').css("transition", "0s");
                    $('body').css("background-color", dubsColor);
                    return setTimeout(function() {
                      $('body').css("transition", "background-color 1s");
                      return $('body').css("background-color", previousColor);
                    }, 250);
                  }
                };
              }
              dubsElement = m("span", {
                config: flashFunction,
                style: "color:" + dubsColors[dubsList.length] + " !important"
              }, dubsList);
              return [beforeChildren, m.trust("<br>"), newDubsString, dubsElement, afterChildren];
            }
          });
        });
      }
    };
  });

}).call(this);
