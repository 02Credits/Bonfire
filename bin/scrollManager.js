// Generated by CoffeeScript 1.12.0
(function() {
  define(["jquery", "underscore", "inputManager", "arbiter"], function($, _, inputManager, arbiter) {
    var addMessages, atBottom, atTop, exportObject, onMouseWheel, touchShim;
    exportObject = {};
    exportObject.stuck = true;
    exportObject.messages = 50;
    atBottom = function() {
      var scrollElement;
      scrollElement = exportObject.scrollElement;
      if (scrollElement != null) {
        return scrollElement[0].scrollHeight - scrollElement.scrollTop() === scrollElement.outerHeight();
      } else {
        return true;
      }
    };
    atTop = function() {
      var scrollElement;
      scrollElement = exportObject.scrollElement;
      if (scrollElement != null) {
        return scrollElement.scrollTop() === 0;
      } else {
        return true;
      }
    };
    addMessages = function() {
      var scrollHeight, token;
      if (!inputManager.searching) {
        scrollHeight = exportObject.scrollElement[0].scrollHeight;
        exportObject.messages += 50;
        arbiter.publish('messages/render');
        token = {};
        return token = arbiter.subscribe('messages/rendered', function() {
          arbiter.unsubscribe(token);
          return exportObject.scrollElement.scrollTop(exportObject.scrollElement[0].scrollHeight - scrollHeight);
        });
      }
    };
    addMessages = _.throttle(addMessages, 1000, {
      trailing: false
    });
    onMouseWheel = function(e) {
      var scrollElement;
      if (e.wheelDelta > 0) {
        return exportObject.stuck = false;
      } else if (exportObject.scrollElement != null) {
        scrollElement = exportObject.scrollElement;
        return exportObject.stuck = scrollElement[0].scrollHeight - scrollElement.scrollTop() === scrollElement.outerHeight();
      }
    };
    exportObject.scrollToBottom = function() {
      return exportObject.scrollElement.scrollTop(exportObject.scrollElement[0].scrollHeight);
    };
    exportObject.scrollIfStuck = function() {
      if (exportObject.stuck) {
        exportObject.messages = 50;
        return exportObject.scrollToBottom();
      } else if (atTop()) {
        return addMessages();
      }
    };
    exportObject.scrollElement = $('#messages');
    setInterval(exportObject.scrollIfStuck, 100);
    exportObject.scrollElement.scroll(exportObject.scrollIfStuck);
    exportObject.lastTouchY = 0;
    touchShim = function(e) {
      var touchY;
      touchY = e.targetTouches[0].pageY;
      onMouseWheel({
        wheelDelta: exportObject.lastTouchY - touchY
      });
      return exportObject.lastTouchY = touchY;
    };
    document.addEventListener("mousewheel", onMouseWheel, true);
    document.addEventListener("touchmove", touchShim, true);
    return exportObject;
  });

}).call(this);
